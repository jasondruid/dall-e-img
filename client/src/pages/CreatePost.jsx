import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { preview } from '../assets'
import { getRandomPrompt } from '../utils'
import { FormField, Loader } from '../components'
import axios from 'axios';
import HCaptcha from '@hcaptcha/react-hcaptcha';

const CreatePost = () => {

    const navigate = useNavigate();
    const [form, setForm] = useState({
        name: '',
        prompt: '',
        photo: '',
    });
    const [captcha, setCaptcha] = useState(null);
    const [resetCaptcha, setResetCaptcha] = useState(1);

    const [generatingImg, setGeneratingImg] = useState(false);
    const [loading, setLoading] = useState(false);

    const generateImg = async () => {
        if (!captcha) {
            return alert('Please complete the captcha');
        }
        if (generatingImg) {
            return alert('An image is being generated right now');
        }
        if (form.prompt) {
            try {
                setGeneratingImg(true);
                const response = await axios.post('https://dall-e-img.onrender.com/api/v1/dalle',
                    { prompt: form.prompt }
                )
                const data = await response.data;

                setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
                setCaptcha(null);
                setResetCaptcha(previous => previous + 1);
            }
            catch (error) {
                if (error?.response.data) {
                    return alert(error.response.data)
                }
                alert(error);
            }
            finally {
                setGeneratingImg(false);
            }
        }
        else {
            alert('Please enter a prompt');
        }
    }

    const handleSubmit = async (e) => {
        if (loading) {
            alert("We are submitting your image, please wait");
        }
        e.preventDefault();
        if (form.prompt && form.photo) {
            setLoading(true);
            try {
                const response = await axios.post('https://dall-e-img.onrender.com/api/v1/post', form);
                const data = response.data;
                navigate('/');
            }
            catch (error) {
                alert(error);
            }
            finally {
                setLoading(false);
            }
        }
        else {
            alert('Please enter a prompt, complete captcha and generate an Image');
        }
    }

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value })
    }

    const handleSurpriseMe = () => {
        const randomPrompt = getRandomPrompt(form.prompt);
        setForm({ ...form, prompt: randomPrompt })
    }



    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[32px] dark:text-gray-200'>Create</h1>
                <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px] dark:text-gray-400'>Create imaginative and visually stunning images generated by DALL-e AI and share them with the community</p>
            </div>
            <form className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
                <div className='flex flex-col gap-5'>
                    <FormField labelName="Your name" type="text" name="name" placeholder="John Doe" handleChange={handleChange} value={form.name} />
                    <FormField labelName="Prompt" type="text" name="prompt" placeholder="A photograph of a cyborg exploring Tokyo at night, lomography" handleChange={handleChange} value={form.prompt} isSurpriseMe handleSurpriseMe={handleSurpriseMe} />
                    <div className='relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center  m-auto sm:m-0'>
                        {form.photo ? (<img src={form.photo} alt={form.prompt} className="w-full h-full object-contain" />) : (<img src={preview} alt="preview" className='w-3/4 h-3/4 object-contain opacity-40' />)}

                        {generatingImg && (<div className='absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg'>
                            <Loader />
                        </div>)}
                    </div>
                </div>
                <div className='mt-2 flex gap-5 items-center justify-center sm:justify-start'>
                    <HCaptcha key={resetCaptcha}
                        sitekey={import.meta.env.VITE_REACT_APP_HCAPTCHA_SITEKEY}
                        onVerify={setCaptcha}
                    />
                </div>
                <div className='mt-5 flex gap-5 '>

                    <button className=' text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center' type="button" onClick={generateImg}>
                        {generatingImg ? 'Generating...' : 'Generate'}
                    </button>

                </div>
                <div className='mt-10 '>
                    <p className='mt-2 text-[#666e75] text-[14px] dark:text-gray-400'> Once you have created the image you want, you can share it with others in the community</p>
                    <button type="submit" className='mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'>
                        {loading ? 'Sharing...' : 'Share with the community'}
                    </button>
                </div>
            </form>
        </section>
    )
}

export default CreatePost